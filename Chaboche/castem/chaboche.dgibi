*
* \file   chaboche.mfront
* \brief  example of how to use the chaboche behaviour law
* in the Cast3M finite element solver
* \author 
* \date   
*

xyoun = 'TABLE';
xyoun . 'MODELE' = 'chaboche_YoungModulus';
xyoun . 'LIBRAIRIE' = 'UmatBehaviour';
xyoun . 'VARIABLES' = 'MOTS'  'XYOU';

xnu = 'TABLE';
xnu . 'MODELE' = 'chaboche_PoissonRatio';
xnu . 'LIBRAIRIE' = 'UmatBehaviour';
xnu . 'VARIABLES' = 'MOTS'  'XNU';

** AxisymmetricalGeneralisedPlaneStrain example
** 'OPTION' 'DIMENSION' 1 'MODELISER' 'UNID' 'AXIS' 'AXGZ' ;

 coel = 'MOTS' 'YOUN' 'NU' 'RHO' 'ALPH' 'TALP' 'TREF' 'XYOU' 'XNU'
'XR0' 'XQ' 'XB';

 statev = 'MOTS' 'EERR' 'EEZZ' 'EETT' 'P';

 params = 'MOTS' 'T' ;

 MO = 'MODELISER' v 'MECANIQUE' 'ELASTIQUE' 'NON_LINEAIRE'
'UTILISATEUR' 'LIB_LOI' 'libUmatBehaviour.so' 'FCT_LOI' 'umatchaboche'
'C_MATERIAU' coel 'C_VARINTER' statev 'PARA_LOI' params 'CONS' M;

 MA = 'MATERIAU' MO 'YOUN' xyoun 'NU' xnu 'RHO' xrho 'ALPH' xalph
'TALP' xtalp 'TREF' xtref 'XYOU' xxyoung 'XNU' xxnu 'XR0' xxr0 'XQ' xxq
'XB' xxb;

** Axisymmetrical example
** 'OPTION' 'DIMENSION' 2 'MODELISER' 'AXIS' ;

 coel = 'MOTS' 'YOUN' 'NU' 'RHO' 'ALPH' 'TALP' 'TREF' 'XYOU' 'XNU'
'XR0' 'XQ' 'XB';

 statev = 'MOTS' 'EERR' 'EEZZ' 'EETT' 'EERZ' 'P';

 params = 'MOTS' 'T' ;

 MO = 'MODELISER' v 'MECANIQUE' 'ELASTIQUE' 'NON_LINEAIRE'
'UTILISATEUR' 'LIB_LOI' 'libUmatBehaviour.so' 'FCT_LOI' 'umatchaboche'
'C_MATERIAU' coel 'C_VARINTER' statev 'PARA_LOI' params 'CONS' M;

 MA = 'MATERIAU' MO 'YOUN' xyoun 'NU' xnu 'RHO' xrho 'ALPH' xalph
'TALP' xtalp 'TREF' xtref 'XYOU' xxyoung 'XNU' xxnu 'XR0' xxr0 'XQ' xxq
'XB' xxb;

** PlaneStrain example
** 'OPTION' 'DIMENSION' 2 'MODELISER' 'PLAN' 'DEFO' ;

 coel = 'MOTS' 'YOUN' 'NU' 'RHO' 'ALPH' 'TALP' 'TREF' 'XYOU' 'XNU'
'XR0' 'XQ' 'XB';

 statev = 'MOTS' 'EEXX' 'EEYY' 'EEZZ' 'EEXY' 'P';

 params = 'MOTS' 'T' ;

 MO = 'MODELISER' v 'MECANIQUE' 'ELASTIQUE' 'NON_LINEAIRE'
'UTILISATEUR' 'LIB_LOI' 'libUmatBehaviour.so' 'FCT_LOI' 'umatchaboche'
'C_MATERIAU' coel 'C_VARINTER' statev 'PARA_LOI' params 'CONS' M;

 MA = 'MATERIAU' MO 'YOUN' xyoun 'NU' xnu 'RHO' xrho 'ALPH' xalph
'TALP' xtalp 'TREF' xtref 'XYOU' xxyoung 'XNU' xxnu 'XR0' xxr0 'XQ' xxq
'XB' xxb;

** GeneralisedPlaneStrain example
** 'OPTION' 'DIMENSION' 2 'MODELISER' 'PLAN' 'GENE' ;

 coel = 'MOTS' 'YOUN' 'NU' 'RHO' 'ALPH' 'TALP' 'TREF' 'XYOU' 'XNU'
'XR0' 'XQ' 'XB';

 statev = 'MOTS' 'EEXX' 'EEYY' 'EEZZ' 'EEXY' 'P';

 params = 'MOTS' 'T' ;

 MO = 'MODELISER' v 'MECANIQUE' 'ELASTIQUE' 'NON_LINEAIRE'
'UTILISATEUR' 'LIB_LOI' 'libUmatBehaviour.so' 'FCT_LOI' 'umatchaboche'
'C_MATERIAU' coel 'C_VARINTER' statev 'PARA_LOI' params 'CONS' M;

 MA = 'MATERIAU' MO 'YOUN' xyoun 'NU' xnu 'RHO' xrho 'ALPH' xalph
'TALP' xtalp 'TREF' xtref 'XYOU' xxyoung 'XNU' xxnu 'XR0' xxr0 'XQ' xxq
'XB' xxb;

** Tridimensional example
** 'OPTION' 'DIMENSION' 3 'MODELISER' 'TRID' ;

 coel = 'MOTS' 'YOUN' 'NU' 'RHO' 'ALPH' 'TALP' 'TREF' 'XYOU' 'XNU'
'XR0' 'XQ' 'XB';

 statev = 'MOTS' 'EEXX' 'EEYY' 'EEZZ' 'EEXY' 'EEXZ' 'EEYZ' 'P';

 params = 'MOTS' 'T' ;

 MO = 'MODELISER' v 'MECANIQUE' 'ELASTIQUE' 'NON_LINEAIRE'
'UTILISATEUR' 'LIB_LOI' 'libUmatBehaviour.so' 'FCT_LOI' 'umatchaboche'
'C_MATERIAU' coel 'C_VARINTER' statev 'PARA_LOI' params 'CONS' M;

 MA = 'MATERIAU' MO 'YOUN' xyoun 'NU' xnu 'RHO' xrho 'ALPH' xalph
'TALP' xtalp 'TREF' xtref 'XYOU' xxyoung 'XNU' xxnu 'XR0' xxr0 'XQ' xxq
'XB' xxb;

* The behaviour does not support the plane stress hypothesis
* natively.
* Support for the plane stress hypothesis
* is added through the generic plane stress handler
* provided by the Cast3M interface. This requires some tricky
* manipulations of the material properties and can be quite
* inefficient. Use it with care and consider adding proper
* plane stress support to your behaviour.
*
** PlaneStress example
** 'OPTION' 'DIMENSION' 2 'MODELISER' 'PLAN' 'CONT' ;

 coel = 'MOTS' 'YOUN' 'NU' 'RHO' 'ALPH' 'DIM3' 'TALP' 'TREF' 'XYOU'
'XNU' 'XR0' 'XQ' 'XB';

 statev = 'MOTS' 'EEXX' 'EEYY' 'EEZZ' 'EEXY' 'P' 'ETOZ';

 params = 'MOTS' 'T' ;

 MO = 'MODELISER' v 'MECANIQUE' 'ELASTIQUE' 'NON_LINEAIRE'
'UTILISATEUR' 'LIB_LOI' 'libUmatBehaviour.so' 'FCT_LOI' 'umatchaboche'
'C_MATERIAU' coel 'C_VARINTER' statev 'PARA_LOI' params 'CONS' M;

 MA = 'MATERIAU' MO 'YOUN' xyoun 'NU' xnu 'RHO' xrho 'ALPH' xalph
'DIM3' xdim3 'TALP' xtalp 'TREF' xtref 'XYOU' xxyoung 'XNU' xxnu 'XR0'
xxr0 'XQ' xxq 'XB' xxb;

